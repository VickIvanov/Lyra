version: '3.2'

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    postgres_data: {}

services:
  traefik:
    image: traefik:v2.2
    restart: always
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "./infra/traefik/traefik.yaml:/etc/traefik/traefik.yaml"
      - "./infra/traefik/dynamic.yaml:/etc/traefik/dynamic/dynamic.yaml"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - monitor-net

  # фронтенд
  ui:
    image: docker.pkg.github.com/alewkinr/lyra/ui
    restart: always
    container_name: ui
    # ports:
    #   - 8080
    networks:
      - monitor-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui.rule=Host(`*`)"
      - "traefik.http.routers.ui.middlewares=cors@file"
      - "traefik.http.routers.ui.entrypoints=web"

  postgres:
    image: postgres
    restart: always
    container_name: postgres
    volumes:
      - "./infra/postgres:/var/lib/postgresql/data"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  auth:
    image: docker.pkg.github.com/alewkinr/lyra/auth:latest
    volumes:
    - ./back/auth/:/service
    container_name: auth
    restart: always
    expose:
      - 8080
    environment:
      - NAMESPACE=production
      - DOMAIN=localhost
      - SERVER_NAME=auth
      - SERVER_HOST=http://127.0.0.1:8080
      - STACK_NAME=auth
      - TRAEFIK_PUBLIC_NETWORK=monitor-net
      - TRAEFIK_TAG=auth
      - TRAEFIK_PUBLIC_TAG=monitor-net
      - DOCKER_IMAGE_BACKEND=docker.pkg.github.com/alewkinr/lyra/backend
      - BACKEND_CORS_ORIGINS=["http://localhost", "http://localhost:4200", "http://localhost:3000", "http://localhost:8080", "https://localhost", "https://localhost:4200", "https://localhost:3000", "https://localhost:8080", "http://dev.auth.com", "https://stag.auth.com", "https://auth.com", "http://local.dockertoolbox.tiangolo.com", "http://localhost.tiangolo.com"]
      - PROJECT_NAME=auth
      - SECRET_KEY=04ecee494832d84f03b1d59574043e84d0b03fe26dbd27c700e5dd60b5cae64f
      - FIRST_SUPERUSER=admin@auth.com
      - FIRST_SUPERUSER_PASSWORD=admin
      - USERS_OPEN_REGISTRATION=False
      - SENTRY_DSN=https://7cfd60f0751d4cc1b03bd2acd56ea5e4@o419007.ingest.sentry.io/5516233
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - monitor-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`*`) && PathPrefix(`/auth`)"
      - "traefik.http.routers.auth.middlewares=cors@file,stripprefix@file"
      - "traefik.http.routers.auth.entrypoints=web"

  # сервис моделей
  model:
    image: docker.pkg.github.com/alewkinr/lyra/model:latest
    volumes:
      - ./back/model/:/service
    container_name: model
    restart: always
    expose:
      - 8080
    environment:
      - DOMAIN=localhost
      - SERVER_NAME=model
      - SERVER_HOST=http://127.0.0.1:8080
      - STACK_NAME=model
      - TRAEFIK_PUBLIC_NETWORK=monitor-net
      - TRAEFIK_TAG=model
      - TRAEFIK_PUBLIC_TAG=monitor-net
      - BACKEND_CORS_ORIGINS=["http://localhost", "http://localhost:4200", "http://localhost:3000", "http://localhost:8080", "https://localhost", "https://localhost:4200", "https://localhost:3000", "https://localhost:8080", "http://dev.model.com", "https://stag.model.com", "https://model.com", "http://local.dockertoolbox.tiangolo.com", "http://localhost.tiangolo.com"]
      - PROJECT_NAME=model
      - SECRET_KEY=04ecee494832d84f03b1d59574043e84d0b03fe26dbd27c700e5dd60b5cae64f
      - FIRST_SUPERUSER=admin@model.com
      - FIRST_SUPERUSER_PASSWORD=admin
      - SENTRY_DSN=https://7cfd60f0751d4cc1b03bd2acd56ea5e4@o419007.ingest.sentry.io/5516233
      - NAMESPACE=production
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - monitor-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.model.rule=Host(`*`) && PathPrefix(`/model`)"
      - "traefik.http.routers.model.middlewares=cors@file,stripprefix@file"
      - "traefik.http.routers.model.entrypoints=web"

  # prometheus для метрик
  prometheus:
    image: prom/prometheus:v2.17.0
    container_name: prometheus
    restart: always
    expose:
      - 9090
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    volumes:
      - "./infra/metrics/prometheus/:/etc/prometheus/"
      - "prometheus_data:/prometheus"
    networks:
      - monitor-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`*`) && PathPrefix(`/prometheus`)"
      - "traefik.http.routers.prometheus.middlewares=cors@file,stripprefix@file"
      - "traefik.http.routers.prometheus.entrypoints=web"

  # prometheus push-gateway для метрик
  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    restart: always
    expose:
      - 9091
    ports:
      - "9091:9091"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  ml-runner:
    image: docker.pkg.github.com/alewkinr/lyra/extra_trees_classifier:v4_test
    container_name: ml-runner
    restart: always
    environment:
      - LYRA_METRICS_HOST=pushgateway:9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
